define([], function () {
    'use strict';

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var BDDataConfigOption = function () {
        function BDDataConfigOption() {
            _classCallCheck(this, BDDataConfigOption);

            this.defaultBarOption = {
                tooltip: {
                    trigger: 'axis',
                    axisPointer: { // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                legend: {
                    data: [''],
                    right: '5%',
                    top: '6%'
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    asisTick: {
                        interval: 0
                    },
                    axisLabel: {
                        interval: 0,
                        rotate: 30
                    },
                    data: []
                }],
                yAxis: [{
                    type: 'value'
                }],
                series: [{
                    name: '',
                    type: 'bar',
                    label: {
                        normal: {
                            show: true,
                            position: 'top'
                        }
                    },
                    data: []
                }]
            };
        }

        _createClass(BDDataConfigOption, [{
            key: 'generateBDBarOptionDatas',
            value: function generateBDBarOptionDatas(data) {
                var xAxisData = [];
                var seriesData = [];

                xAxisData = Object.keys(data);
                Object.keys(data).forEach(function (val) {
                    seriesData.push(data[val]);
                });

                return { xAxisData: xAxisData, seriesData: seriesData };
            }
        }, {
            key: 'setToBDBarOption',
            value: function setToBDBarOption(legendData, xAxisData, seriesName, seriesData, addtionalOption) {

                var barOption = this.defaultBarOption;

                barOption.legend.data = legendData;
                barOption.xAxis[0].data = xAxisData;
                barOption.series[0].name = seriesName;
                barOption.series[0].data = seriesData;

                if (addtionalOption) {
                    Object.assign(barOption, addtionalOption);
                }
                return barOption;
            }
        }]);

        return BDDataConfigOption;
    }();
});